from Crypto.PublicKey import RSA
from blockchain.cryptography import generate_keypair
from blockchain.permission_transaction import Permission, PermissionTransaction

import pytest

PUB_KEY_HEX = '30820122300d06092a864886f70d01010105000382010f003082010a0282010100c6bc38303c7fe110128f165e7d165b2c64741236794f57d6a7267dc51226454c66f3ba56762993c9bcccca18cf87d7bef9d367402aeee2104169c840cea782ff39e8874db699e99bfebeed58f274b638c391faced86bdbc15d88a80f2895d77bffeb66d4133a5844b4502fde0a30dc60f8298c0875763270837145baef8895078ecceed10c9e7595d3a501e778ac04a3af68a9dc19441715a6b08554e57f5a093451d5b8c40a131171ff7bad7af4c420f32d82c7fbd76618a93ec8c7ff7369e962404c96bba65e7733e2bbd7cf1714aeaca4c80d313aa6cd22315c5a4f0913faf6be2f259689b548ff4218bf4eed0cbf525cf67e16ae8d33e52a255ddb854c570203010001'
PRIV_KEY_HEX = '308204a30201000282010100c6bc38303c7fe110128f165e7d165b2c64741236794f57d6a7267dc51226454c66f3ba56762993c9bcccca18cf87d7bef9d367402aeee2104169c840cea782ff39e8874db699e99bfebeed58f274b638c391faced86bdbc15d88a80f2895d77bffeb66d4133a5844b4502fde0a30dc60f8298c0875763270837145baef8895078ecceed10c9e7595d3a501e778ac04a3af68a9dc19441715a6b08554e57f5a093451d5b8c40a131171ff7bad7af4c420f32d82c7fbd76618a93ec8c7ff7369e962404c96bba65e7733e2bbd7cf1714aeaca4c80d313aa6cd22315c5a4f0913faf6be2f259689b548ff4218bf4eed0cbf525cf67e16ae8d33e52a255ddb854c570203010001028201003a0c47233bc0a47603ddbc8c6be008507ea4f29eebaf13ba9487272c55614d53842cc3ac36866d6efb111c24c4156b1c92af3f94dc157b7d8105cb62b699f226e77cb66caa1de9c0d157664f593e62ed509e86923d5fbfc80ab07c5a352213575a48a177e787deb96eab8f57bd4549519f9acf16b76c874e1aee8e8e0c222a590f4f67f1af4728034344cf43b05ebd999b17465b3c357d9db5ccb140ee42a8b26e0c90909e2e2d39f6e9eb261f1c8c8ecdd6a03c900541956e628fea7a9dab2100f7fa2f56f962497a455802314ef62fb3ca77b456d3e0be8187e784f88834155c6bfdc6bbfba614f1973032f97c3523731cadd53c204bccbb311443913dfc6102818100d513040912f847d86a8b4bed5db27898289ffd050c028d221ee0f77a90f14494086e632bdb29bbe3e5f437d2acd08118cf4976c860fe4d2c9a51e1c990369296ce80c3ebec2175715f1b61efde9ae198457f8b9c4991ef252dd00c1121733ccd3eb163850249871568e0c71a5ad6b38068129b14db9879ea344c70fc8f7b44f702818100eec5b060dd09f5d562a0727eb1a90bdeb08ea7ca9d18dc0041a454a3ce8bbb0d6c935a4d52987e47a144e595cef7f0afe922c2a64cf876963708429efeb491da2b27bb03870bbb0374e4d96170648feaaa62723618541dcdb438f72767245bf1269c16acf90703dc325d93c29b4243e132a6f1164d915d9554b2ff4f26363ba10281802fc4478f51355fc5e07cc1d4c0c095d066ab1729de7b63f05643d0b7256f31148e9f50943059b6c96c6fc763ef61fecef5095f1ba4c2ddc236064d3bc69cb558218b3460db5ad4dd4998f5e7b45bbc5f4a954153141b27258a93ad60d9c2dfca9357691c145b2f715945aadcf9a8502d652766a4d265e84edcd29631c868b61902818100d4acd50b92167b1753bfe1fba33715518725a9a2b907197e48f99c424389065550ae7732842d3bdd85719ea52f327cf9d2c89964130f04618c2719601132b8ef009d64e0217b7b59fad694214c40e64778f8330ea7e0d4a312b1e2c30005ccb72152ca87cb504a49e9ba9c102cc67b3bad2831795221f69f3a502d444c9ee5c10281803bc6f4c806ea09b6cc950ff8ef0a0922a5049dadfddd4151319f8c4ddaf002b524583ccad907b59262779bc78f67d24a60350fb8cf737e9fcfd37ff3dcb1762e2a018ff2856ae422f10ed07bf1427aab0440926a5ca4fa550543f5425ded8ec522449128f96aef749397b5189c34bd206bc5e48d977767fec5fc8892938a282a'

PUBLIC_KEY = RSA.import_key(bytes.fromhex(PUB_KEY_HEX))
PRIVATE_KEY = RSA.import_key(bytes.fromhex(PRIV_KEY_HEX))

def test_transaction_information():
    tx = PermissionTransaction(Permission.doctor, PUBLIC_KEY)
    info = tx.get_transaction_information()
    assert info["permission_request"] == Permission.doctor, "Permission should request Doctor permissions"
    assert info["sender_wallet"] == PUBLIC_KEY.exportKey("DER"), "Sender public key must match wallet public key"
    assert info["signature"] == None, "Transaction should be unsigned by default"
